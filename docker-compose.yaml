services:
  orchestrator:
    build:
      context: .
      dockerfile: Dockerfile.golang
    env_file:
      - env/.env.golang
      - env/.env.pg
      - env/.env.rmq
    healthcheck:
      test: wget --quiet --tries=1 --spider http://localhost:8080/health || exit 1
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 30s
    depends_on:
      postgres:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
  postgres:
    image: postgres:16-alpine
    ports:
      - 5432:5432
    volumes:
      - db_data:/var/lib/postgresql/data
      - db_log:/var/log/postgresql
    env_file:
      - env/.env.pg
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U gocalculator -d gocalculator " ]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 5s
  http_docs:
    image: swaggerapi/swagger-ui
    environment:
      - SWAGGER_JSON=/docs/swagger.json
    volumes:
      - ./docs:/docs
  nginx:
    image: prod
    ports:
      - 80:80
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    build:
      context: .
      dockerfile: Dockerfile.nginx
    depends_on:
      http_docs:
        condition: service_started
      orchestrator:
        condition: service_healthy
  rabbitmq:
    image: rabbitmq:3-management-alpine
    env_file: env/.env.rmq
    ports:
      - 5672:5672
      - 15672:15672
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq/
      - rabbitmq_log:/var/log/rabbitmq
    healthcheck:
      test: [ "CMD", "rabbitmqctl", "status" ]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 30s

volumes:
  db_data:
  db_log:
  rabbitmq_data:
  rabbitmq_log: